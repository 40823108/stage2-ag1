<h1>Introduction</h1>
<p><span>Group website: </span><a href="https://a40823112.github.io/stage2-ag1/content/index.html">stage2-ag1</a></p>
<p><span>Group<span> </span><span>repository</span><span> </span>:<span> </span></span><a href="https://github.com/a40823112/stage2-ag1">stage2-ag1</a></p>
<p><span>Group<span> </span><span>Heroku</span><span> </span>:<span> </span></span><a href="https://dashboard.heroku.com/apps/stage2-ag1">stage2-ag1</a></p>
<h1>Work Distribution</h1>
<p><a href="https://40823108.github.io/cd2021/content/index.html">40823108</a> :</p>
<p><a href="https://40823109.github.io/cd2021/content/index.html">40823109</a> :</p>
<p><a href="https://a40823112.github.io/cd2021/content/index.html">40823112</a> :</p>
<p><a href="https://40823145.github.io/cd2021/content/index.html">40823145</a> :</p><h1>Copperation</h1>
<p>協同設計與版次管理能夠有效提升團隊工作效率，降低內容互相覆蓋，最終造成無法辨識是誰更改內容的情況。</p>
<p></p>
<p>領導主幹設立項目Project所需目標要求，主導至最終完成，協作者分支Branch由主幹分配負責工作區或衍生不同設計，各分支皆達到目標需求後合併回主幹，方能生產項目。</p>
<p></p>
<p>因協作者的工作與內容更動皆在獨立分支清清楚楚，責任歸屬的也就一目了然。</p>
<p>分支出來的設計，在本次目標不需要，或許未來的項目可以用上。可以避免掉「當初做過，但改掉了，這次又要重做」這種事情發生</p>
<p><img alt="" height="673" src="/images/Untitled Diagram-3.png" width="924"/></p>
<p>組長在倉儲Setting-&gt;Manage access-&gt;Invite a collaborato邀請協作者</p>
<p>組員在自己倉儲中Setting-&gt;Manage access-&gt;Invite a collaborato組長(組員不用互邀)</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">git clone --recurse-submodules https://github.com/a40823112/stage2-ag1.git stage2-ag1 (clone組長倉儲)
cd stage2-ag1
git remote add 40823145 https://github.com/40823145/stage2-ag1.git (add自己倉儲)
</pre>